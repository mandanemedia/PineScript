//@version=2
strategy("Multiple Higher TF Price Differential - Dan", shorttitle="HTFPD_M", overlay=false)

//Some good setup:
// (24,12,4, close, 0.55, 48)
// (24,6,4, close, 0.55, 48)
TF1=input(24, title="1st Higher Time Frame", type=integer)
TF2=input(6, title="2nd Higher Time Frame", type=integer)
TF3=input(4, title="3rd Higher Time Frame", type=integer)
Source=input(close, title="Input Source" )
thresholdLimit = input(title="Threshold Limit", type=float, defval=0.55, step=0.05)
thresholdMA=input(48, title="Threshold Moving Average", type=integer)

getDiff(givenTF) =>
    TimeFrame=givenTF*60
    yesterday =security(tickerid, tostring(TimeFrame), Source[1], false)
    today_open =security(tickerid, tostring(TimeFrame), open, false)
    today_high =security(tickerid, tostring(TimeFrame), high, false)
    today_low =security(tickerid, tostring(TimeFrame), low, false)
    today =  (today_open + today_high + today_low )/3
    percentage= ((today-yesterday)/yesterday)*100
    
getBuyingSignals(givenTF) =>   
    closeDiff = getDiff(givenTF)
    threshold = ema(closeDiff, thresholdMA) * thresholdLimit
    buying = closeDiff > threshold and  closeDiff > -threshold ? true : closeDiff < -threshold and closeDiff < threshold ? false : buying[1]

x = getBuyingSignals(TF1)
y = getBuyingSignals(TF2)
z = getBuyingSignals(TF3)

//if among 24,12,4 buying signals at least 2 of them is buy, then signal for buy
buying = (x==y and x) or (x==z and x) or (y==z and y) ? true : false
plotcolor = buying ? blue : red 
bgcolor(plotcolor, transp=85 )

if (buying)
    strategy.entry("Long", strategy.long)

if (buying != true)
    strategy.entry("Short", strategy.short)
    
every4Hours() =>
    t = time('240')
    change(t) != 0 ? black : na
bgcolor(every4Hours(), transp=85 )
